name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Projects
    runs-on: ubuntu-latest

    steps:
      # 1. 레포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Mono 설치 (C# 빌드를 위해)
      - name: Install Mono (for C# build)
        run: |
          sudo apt-get update
          sudo apt-get install -y mono-complete

      # 3. Kotlin 컴파일러 설치
      - name: Install Kotlin compiler
        run: |
          curl -s https://get.sdkman.io | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install kotlin
        shell: bash

      # 4. C++ 프로젝트 빌드
      - name: Build C++ Project
        run: |
          mkdir -p build/cpp-project
          for file in cpp-project/*.cpp; do
              filename=$(basename "$file" .cpp)
              g++ "$file" -o "build/cpp-project/$filename-program"
          done

      # 5. C# 프로젝트 빌드
      - name: Build C# Project
        run: |
          mkdir -p build/csharp-project
          mcs csharp-project/*.cs -out:build/csharp-project/csharp-program.exe

      # 6. Kotlin 프로젝트 빌드
      - name: Build Kotlin Project
        run: |
          mkdir -p build/kotlin-project
          kotlinc kotlin-project/*.kt -include-runtime -d build/kotlin-project/kotlin-program.jar

      # 7. 빌드 결과 압축
      - name: Archive Build Artifacts
        run: |
          tar -czf build-artifacts.tar.gz -C build .

      # 8. 빌드 결과 업로드 (아티팩트)
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build-artifacts.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      # 1. 레포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 빌드 아티팩트 다운로드
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      # 3. GitHub Release 생성
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: build-artifacts.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.sha }}
          name: Release ${{ github.sha }}
          body: |
            이 릴리즈에는 다음 프로젝트의 컴파일된 바이너리 파일이 포함되어 있습니다:
            - C++ 프로젝트
            - C# 프로젝트
            - Kotlin 프로젝트
