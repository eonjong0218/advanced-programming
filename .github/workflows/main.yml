name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write  # ✅ 릴리즈에 꼭 필요함!

jobs:
  build:
    name: Build Projects
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Mono (for C# build)
        run: |
          sudo apt-get update
          sudo apt-get install -y mono-complete

      - name: Install Kotlin compiler
        run: |
          curl -s https://get.sdkman.io | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install kotlin
        shell: bash

      - name: Build C++ Project
        run: |
          mkdir -p build/cpp-project
          for file in cpp-project/*.cpp; do
              filename=$(basename "$file" .cpp)
              g++ "$file" -o "build/cpp-project/$filename-program"
          done

      - name: Build C# Project
        run: |
          mkdir -p build/csharp-project
          for file in csharp-project/*.cs; do
              filename=$(basename "$file" .cs)
              mcs "$file" -out:build/csharp-project/"$filename.exe" || {
                echo "Compilation failed for $file"
                cat "$file"
                exit 1
              }
          done

      - name: Build Kotlin Project
        run: |
          mkdir -p build/kotlin-project
          for file in kotlin-project/*.kt; do
              filename=$(basename "$file" .kt)
              kotlinc "$file" -include-runtime -d build/kotlin-project/"$filename.jar" || {
                echo "Compilation failed for $file"
                cat "$file"
                exit 1
              }
          done

      - name: Archive Build Artifacts
        run: |
          tar -czf build-artifacts.tar.gz -C build .

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build-artifacts.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: build-artifacts.tar.gz
          tag: build-${{ github.run_number }}  # ✅ 태그는 명시적으로 설정
          name: Release ${{ github.run_number }}
          body: |
            이 릴리즈에는 다음 프로젝트의 컴파일된 바이너리 파일이 포함되어 있습니다:
            - C++ 프로젝트
            - C# 프로젝트
            - Kotlin 프로젝트

